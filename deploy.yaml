apiVersion: kubevirt.io/v1alpha3
kind: VirtualMachine
metadata:
  name: ubuntu
spec:
  running: false
  template:
    metadata:
      labels: 
        kubevirt.io/size: medium
        kubevirt.io/domain: ubuntu
    spec:
      domain:
        cpu:
          cores: 2
        devices:
          disks:
            - name: disk0
              disk:
                bus: virtio
            - name: cloudinitvolume
              disk:
                bus: virtio
          interfaces:
          - name: default
            bridge: {}
        resources:
          requests:
            memory: 1024M
      networks:
      - name: default
        pod: {}
      volumes:
        - name: disk0
          containerDisk:
            image: tedezed/ubuntu-container-disk:18.0
        - name: cloudinitvolume
          cloudInitNoCloud:
            userData: |-
              #cloud-config
              bootcmd:
                - echo cloud-init=disabled > /etc/cloud/cloud-init.disabled
                - [ /bin/bash, -c, 'echo -e "demopass\ndemopass" | passwd root' ]
                - reboot
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: website
spec:
  replicas: 1
  selector:
    matchLabels:
      app: website
  template:
    metadata:
      labels:
        app: website
    spec:
      containers:
      - name: website
        image: vipu1212/website:0.2
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: website
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: website
  externalIPs:
    - 35.208.66.244
---
apiVersion: v1
kind: Service
metadata:
  name: uploader
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: uploader
  externalIPs:
    - 35.208.66.244
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ig-app
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
  namespace: default
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: website
            port:
              number: 80
      - path: /uploader
        pathType: Prefix
        backend:
          service:
            name: uploader
            port:
              number: 80